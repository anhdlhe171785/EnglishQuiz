@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using PRN222_EnglishQuiz.Models

@{
    ViewData["Title"] = "Làm bài thi";
}

<div class="container mt-5">
    <div class="mb-4 text-center">
        <h2 class="text-primary fw-bold">📝 @ViewBag.Exam.Title</h2>
        <p class="text-muted">@ViewBag.Exam.Description</p>
        <p class="fw-semibold">⏰ Thời gian làm bài: @ViewBag.TimeLimitMinutes phút</p>
    </div>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger text-center">@TempData["Error"]</div>
    }

    <form method="post" asp-action="SubmitExam" asp-controller="Exam"
          class="card shadow-lg p-4 rounded-4"
          onsubmit="return confirmSubmit();">

        @for (int i = 0; i < ViewBag.Questions.Count; i++)
        {
            var q = ViewBag.Questions[i];
            <div class="mb-4">
                <p><strong>Câu @(i + 1):</strong> @q.Content</p>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="answers[@q.Id]" value="A" />
                    <label class="form-check-label">A. @q.OptionA</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="answers[@q.Id]" value="B" />
                    <label class="form-check-label">B. @q.OptionB</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="answers[@q.Id]" value="C" />
                    <label class="form-check-label">C. @q.OptionC</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="answers[@q.Id]" value="D" />
                    <label class="form-check-label">D. @q.OptionD</label>
                </div>
            </div>
            <input type="hidden" name="questionIds" value="@q.Id" />
            <hr />
        }

        <input type="hidden" name="examId" value="@ViewBag.Exam.Id" />

        <div class="text-center">
            <button type="submit" class="btn btn-success px-4 py-2 rounded-pill fw-bold shadow">✅ Nộp bài</button>
        </div>
    </form>
</div>

<!-- Countdown Timer -->
<div id="countdown-popup"
     style="position: fixed; top: 20px; right: 20px; background-color: rgba(0,0,0,0.85); color: white;
            padding: 12px 20px; border-radius: 10px; z-index: 9999; font-size: 16px; font-weight: bold;">
    ⏰ Đang tính thời gian...
</div>

@section Scripts {
    <script>
        let timeLeft = @ViewBag.TimeLimitMinutes * 60;
        const countdownPopup = document.getElementById("countdown-popup");

        const timer = setInterval(function () {
            let minutes = Math.floor(timeLeft / 60);
            let seconds = timeLeft % 60;
            countdownPopup.innerText = `⏳ Còn lại: ${minutes} phút ${seconds < 10 ? '0' : ''}${seconds} giây`;

            if (timeLeft <= 0) {
                clearInterval(timer);
                countdownPopup.innerText = "🛑 Hết giờ!";
                setTimeout(() => {
                    alert("⏰ Hết giờ! Bài sẽ được tự động nộp.");
                    document.querySelector("form").submit();
                }, 1000);
            }

            timeLeft--;
        }, 1000);

        // 🚫 Chặn nút quay lại (Back)
        history.pushState(null, "", location.href);
        window.onpopstate = function () {
            history.go(1);
        };

        // ✅ Xác nhận trước khi nộp bài
        function confirmSubmit() {
            return confirm("📋 Bạn có chắc chắn muốn nộp bài không?");
        }
    </script>
}
